// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    email    String   @unique
    password String
    isAdmin  Boolean  @default(false) @map("is_admin")
    roles    String[] @default([])

    favorites Movie[]
}

model Genre {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    name        String
    slug        String @unique
    description String
    icon        String

    movies Movie[]
}

model Actor {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    name  String
    slug  String @unique
    photo String

    movies Movie[]
}

model Movie {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    slug      String @unique
    title     String @unique
    poster    String
    bigPoster String
    videoUrl  String

    numberOfViews  Int     @default(0)
    rating         Float   @default(5)
    sendToTelegram Boolean @default(false)

    parameters MovieParameters?

    genres Genre[]

    actors Actor[]

    users User[]
}

model MovieParameters {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @updatedAt @map("updated_at")

    year     Int
    duration Int
    country  String
    movie    Movie  @relation(fields: [movieId], references: [id], onDelete: Cascade)
    movieId  Int    @unique @map("movie_id")
}
